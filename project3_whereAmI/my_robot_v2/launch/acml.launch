<launch>
	<!-- Map Server -->
	<arg default="$(find my_robot_v2)/maps/myworld_map.yaml" name="map_file"/>
	<node args="$(arg map_file)" name="map_server" pkg="map_server" type="map_server"/>
	
	<!-- AMCL Node -->
	<node name="amcl" output="screen" pkg="amcl" type="amcl">

		<!-- ************** OVERAL FILTER  **************-->

    	<!-- Minimum allowed number of particles.  -->
		<param name="min_particles" value="100"/>

    	<!-- Maximum allowed number of particles.  -->
		<param name="max_particles" value="500"/>

    	<!-- Maximum error between the true distribution and the estimated distribution.  -->
		<!-- <param name="kld_err" value="0.01"/> -->

    	<!-- Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err.  -->
		<!-- <param name="kld_z" value="0.99"/> -->

    	<!-- Translational movement required before performing a filter update.  -->
		<param name="update_min_d" value="0.2"/>

    	<!-- Rotational movement required before performing a filter update.  -->
		<!-- <param name="update_min_a" value="π/6.0"/> -->

    	<!-- Number of filter updates required before resampling.  -->
		<!-- <param name="resample_interval" value="2"/> -->

    	<!-- Time with which to post-date the transform that is published, to indicate that this transform is valid into the future.  -->
		<!-- <param name="transform_tolerance" value="0.1"/> -->

    	<!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001.  -->
		<!-- <param name="recovery_alpha_slow" value="0.0"/> -->

    	<!-- Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1.  -->
		<!-- <param name="recovery_alpha_fast" value="0.0"/> -->

    	<!-- Initial pose mean (x), used to initialize filter with Gaussian distribution.  -->
		<param name="initial_pose_x" value="1"/>

    	<!-- Initial pose mean (y), used to initialize filter with Gaussian distribution.  -->
		<param name="initial_pose_y" value="4"/>

    	<!-- Initial pose mean (yaw), used to initialize filter with Gaussian distribution.  -->
		<!-- <param name="initial_pose_a" value="0.0 radians"/> -->

    	<!-- Initial pose covariance (x*x), used to initialize filter with Gaussian distribution.  -->
		<!-- <param name="initial_cov_xx" value="0.5*0.5"/> -->

    	<!-- Initial pose covariance (y*y), used to initialize filter with Gaussian distribution.  -->
		<!-- <param name="initial_cov_yy" value="0.5*0.5"/> -->

    	<!-- Initial pose covariance (yaw*yaw), used to initialize filter with Gaussian distribution.  -->
		<!-- <param name="initial_cov_aa" value="(π/12)*(π/12) radian"/> -->

    	<!-- Maximum rate (Hz) at which scans and paths are published for visualization, -1.0 to disable.  -->
		<!-- <param name="gui_publish_rate" value="-1.0 Hz"/> -->

    	<!-- Maximum rate (Hz) at which to store the last estimated pose and covariance to the parameter server, in the variables ~initial_pose_* and ~initial_cov_*. This saved pose will be used on subsequent runs to initialize the filter. -1.0 to disable.   -->
    	<!-- <param name="save_pose_rate" value="0.5 Hz"/> -->

    	<!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map. New in navigation 1.4.2  -->
		<!-- <param name="use_map_topic" value="false"/> -->

		<!-- When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. New in navigation 1.4.2 -->
		<!-- <param name="first_map_only" value="false)"/> -->



		<!-- ************** LASER ************** -->
    	<!-- Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used.  -->
    	<param name="laser_min_range" value="-1.0"/>

    	<!-- Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used.  -->
    	<param name="laser_max_range" value="-1.0"/>

    	<!-- How many evenly-spaced beams in each scan to be used when updating the filter.  -->
    	<param name="laser_max_beams" value="30"/>

    	<!-- Mixture weight for the z_hit part of the model.  -->
    	<param name="laser_z_hit" value="0.90"/>

    	<!-- Mixture weight for the z_short part of the model.  -->
    	<!-- <param name="laser_z_short" value="0.1"/> -->

    	<!-- Mixture weight for the z_max part of the model.  -->
    	<!-- <param name="laser_z_max" value="0.05"/> -->

    	<!-- Mixture weight for the z_rand part of the model.  -->
    	<param name="laser_z_rand" value="0.10"/>

    	<!-- Standard deviation for Gaussian model used in z_hit part of the model.  -->
    	<param name="laser_sigma_hit" value="0.2"/>

    	<!-- Exponential decay parameter for z_short part of model.  -->
    	<param name="laser_lambda_short" value="0.1"/>

    	<!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model.  -->
    	<param name="laser_likelihood_max_dist" value="2.0"/>

    	<!-- Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enaled).  -->
		<param name="laser_model_type" value="likelihood_field"/>



		<!-- ************** ODOMETRY ************** -->
	    <!-- Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected".  -->
		<param name="odom_model_type" value="diff-corrected"/>

	    <!-- Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion.  -->
		<!-- <param name="odom_alpha1" value="0.2"/> -->
		
	    <!-- Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion.  -->
		<!-- <param name="odom_alpha2" value="0.2"/> -->
		
	    <!-- Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion.  -->
		<!-- <param name="odom_alpha3" value="0.2"/> -->
		
	    <!-- Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion.  -->
		<!-- <param name="odom_alpha4" value="0.2"/> -->
		
	    <!-- Translation-related noise parameter (only used if model is "omni").  -->
		<!-- <param name="odom_alpha5" value="0.2"/> -->
		
	    <!-- Which frame to use for odometry.  -->
		<param name="odom_frame_id" value="odom"/>
		
	    <!-- Which frame to use for the robot base  -->
		<param name="base_frame_id" value="robot_footprint"/>
		
	    <!-- The name of the coordinate frame published by the localization system  -->
		<param name="global_frame_id" value="map"/>
		
	    <!-- Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame.  -->
		<param name="tf_broadcast" value="true"/>

	</node>

	<!-- Move Base -->
	<node name="move_base" output="screen" pkg="move_base" respawn="false" type="move_base">
		<param name="base_global_planner" value="navfn/NavfnROS"/>
		<param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
		<rosparam command="load" file="$(find my_robot_v2)/config/costmap_common_params.yaml" ns="global_costmap"/>
		<rosparam command="load" file="$(find my_robot_v2)/config/costmap_common_params.yaml" ns="local_costmap"/>
		<rosparam command="load" file="$(find my_robot_v2)/config/local_costmap_params.yaml"/>
		<rosparam command="load" file="$(find my_robot_v2)/config/global_costmap_params.yaml"/>
		<rosparam command="load" file="$(find my_robot_v2)/config/base_local_planner_params.yaml"/>
	</node>

</launch>